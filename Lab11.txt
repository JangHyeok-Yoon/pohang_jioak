import tensorflow as tf
import matplotlib as plt
import numpy as np
from tensorflow.examples.tutorials.mnist import input_data

sess= tf.InteractiveSession()
image = np.array([[[[1], [2], [3]], [[4], [5], [6]], [[7], [8], [9]]]], dtype=np.float32)
print(image.shape)
plt.imshow(image.reshape(3,3), cmap='Greys')
#1번쨰

print("=================")
print("image.shape", image.shape)
weight= tf.constant([[[[1]], [[1]]], [[[1]], [[1]]]])
print("weight.shape", weight.shape)
conv2d = tf.nn.conv2d(image, weight, strides=[1, 1, 1, 1], padding='VALID')
conv2d_img = conv2d.eval()
print("conv2d_img.shape", conv2d_img.shape)
conv2d_img = np.swapaxes(conv2d_img, 0, 3)
for i, oneimg in enumerate(conv2d_img):
	print(oneimg.reshape(2, 2))
	plt.subplot(1, 2, i+1), plt.imshow(oneimg.reshape(2, 2), cmap = 'gray')
#2번째

print("=================")
print("image.shape", image.shape)
weight= tf.constant([[[[1]], [[1]]], [[[1]], [[1]]]])
print("weight.shape", weight.shape)
conv2d = tf.nn.conv2d(image, weight, strides=[1, 1, 1, 1], padding='SAME')
conv2d_img = conv2d.eval()
print("conv2d_img.shape", conv2d_img.shape)
conv2d_img = np.swapaxes(conv2d_img, 0, 3)
for i, oneimg in enumerate(conv2d_img):
	print(oneimg.reshape(3, 3))
	plt.subplot(1, 2, i+1), plt.imshow(oneimg.reshape(3, 3), cmap = 'gray')
#3번째

print("=================")
print("image.shape", image.shape)
weight= tf.constant([[[[1, 10, -1]], [[1, 10, -1]]], [[[1, 10, -1]], [[1, 10, -1]]]])
print("weight.shape", weight.shape)
conv2d = tf.nn.conv2d(image, weight, strides=[1, 1, 1, 1], padding='SAME')
conv2d_img = conv2d.eval()
print("conv2d_img.shape", conv2d_img.shape)
conv2d_img = np.swapaxes(conv2d_img, 0, 3)
for i, oneimg in enumerate(conv2d_img):
	print(oneimg.reshape(3, 3))
	plt.subplot(1, 3, i+1), plt.imshow(oneimg.reshape(3, 3), cmap = 'gray')
#4번째

image = np.array([[[[4], [3]], [[2], [1]]]], dtype=np.float32)
pool =tf.nn.max_pool(image, ksize=[1, 2, 2, 1], strides=[1, 1, 1, 1], padding='SAME')
print(pool.shape)
print(pool.eval())
#5번째